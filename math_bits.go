package ninjascript
import (
math_bits "math/bits"
)
func init() {if _, ok := Api["math/bits"]; !ok {
   Api["math/bits"] = map[string]interface{}{}
}
Api["math/bits"]["Add"] = math_bits.Add
Api["math/bits"]["Add32"] = math_bits.Add32
Api["math/bits"]["Add64"] = math_bits.Add64
Api["math/bits"]["Div"] = math_bits.Div
Api["math/bits"]["Div32"] = math_bits.Div32
Api["math/bits"]["Div64"] = math_bits.Div64
Api["math/bits"]["LeadingZeros"] = math_bits.LeadingZeros
Api["math/bits"]["LeadingZeros16"] = math_bits.LeadingZeros16
Api["math/bits"]["LeadingZeros32"] = math_bits.LeadingZeros32
Api["math/bits"]["LeadingZeros64"] = math_bits.LeadingZeros64
Api["math/bits"]["LeadingZeros8"] = math_bits.LeadingZeros8
Api["math/bits"]["Len"] = math_bits.Len
Api["math/bits"]["Len16"] = math_bits.Len16
Api["math/bits"]["Len32"] = math_bits.Len32
Api["math/bits"]["Len64"] = math_bits.Len64
Api["math/bits"]["Len8"] = math_bits.Len8
Api["math/bits"]["Mul"] = math_bits.Mul
Api["math/bits"]["Mul32"] = math_bits.Mul32
Api["math/bits"]["Mul64"] = math_bits.Mul64
Api["math/bits"]["OnesCount"] = math_bits.OnesCount
Api["math/bits"]["OnesCount16"] = math_bits.OnesCount16
Api["math/bits"]["OnesCount32"] = math_bits.OnesCount32
Api["math/bits"]["OnesCount64"] = math_bits.OnesCount64
Api["math/bits"]["OnesCount8"] = math_bits.OnesCount8
Api["math/bits"]["Rem"] = math_bits.Rem
Api["math/bits"]["Rem32"] = math_bits.Rem32
Api["math/bits"]["Rem64"] = math_bits.Rem64
Api["math/bits"]["Reverse"] = math_bits.Reverse
Api["math/bits"]["Reverse16"] = math_bits.Reverse16
Api["math/bits"]["Reverse32"] = math_bits.Reverse32
Api["math/bits"]["Reverse64"] = math_bits.Reverse64
Api["math/bits"]["Reverse8"] = math_bits.Reverse8
Api["math/bits"]["ReverseBytes"] = math_bits.ReverseBytes
Api["math/bits"]["ReverseBytes16"] = math_bits.ReverseBytes16
Api["math/bits"]["ReverseBytes32"] = math_bits.ReverseBytes32
Api["math/bits"]["ReverseBytes64"] = math_bits.ReverseBytes64
Api["math/bits"]["RotateLeft"] = math_bits.RotateLeft
Api["math/bits"]["RotateLeft16"] = math_bits.RotateLeft16
Api["math/bits"]["RotateLeft32"] = math_bits.RotateLeft32
Api["math/bits"]["RotateLeft64"] = math_bits.RotateLeft64
Api["math/bits"]["RotateLeft8"] = math_bits.RotateLeft8
Api["math/bits"]["Sub"] = math_bits.Sub
Api["math/bits"]["Sub32"] = math_bits.Sub32
Api["math/bits"]["Sub64"] = math_bits.Sub64
Api["math/bits"]["TrailingZeros"] = math_bits.TrailingZeros
Api["math/bits"]["TrailingZeros16"] = math_bits.TrailingZeros16
Api["math/bits"]["TrailingZeros32"] = math_bits.TrailingZeros32
Api["math/bits"]["TrailingZeros64"] = math_bits.TrailingZeros64
Api["math/bits"]["TrailingZeros8"] = math_bits.TrailingZeros8
Api["math/bits"]["Add"] = math_bits.Add
Api["math/bits"]["Add32"] = math_bits.Add32
Api["math/bits"]["Add64"] = math_bits.Add64
Api["math/bits"]["Div"] = math_bits.Div
Api["math/bits"]["Div32"] = math_bits.Div32
Api["math/bits"]["Div64"] = math_bits.Div64
Api["math/bits"]["LeadingZeros"] = math_bits.LeadingZeros
Api["math/bits"]["LeadingZeros16"] = math_bits.LeadingZeros16
Api["math/bits"]["LeadingZeros32"] = math_bits.LeadingZeros32
Api["math/bits"]["LeadingZeros64"] = math_bits.LeadingZeros64
Api["math/bits"]["LeadingZeros8"] = math_bits.LeadingZeros8
Api["math/bits"]["Len"] = math_bits.Len
Api["math/bits"]["Len16"] = math_bits.Len16
Api["math/bits"]["Len32"] = math_bits.Len32
Api["math/bits"]["Len64"] = math_bits.Len64
Api["math/bits"]["Len8"] = math_bits.Len8
Api["math/bits"]["Mul"] = math_bits.Mul
Api["math/bits"]["Mul32"] = math_bits.Mul32
Api["math/bits"]["Mul64"] = math_bits.Mul64
Api["math/bits"]["OnesCount"] = math_bits.OnesCount
Api["math/bits"]["OnesCount16"] = math_bits.OnesCount16
Api["math/bits"]["OnesCount32"] = math_bits.OnesCount32
Api["math/bits"]["OnesCount64"] = math_bits.OnesCount64
Api["math/bits"]["OnesCount8"] = math_bits.OnesCount8
Api["math/bits"]["Rem"] = math_bits.Rem
Api["math/bits"]["Rem32"] = math_bits.Rem32
Api["math/bits"]["Rem64"] = math_bits.Rem64
Api["math/bits"]["Reverse"] = math_bits.Reverse
Api["math/bits"]["Reverse16"] = math_bits.Reverse16
Api["math/bits"]["Reverse32"] = math_bits.Reverse32
Api["math/bits"]["Reverse64"] = math_bits.Reverse64
Api["math/bits"]["Reverse8"] = math_bits.Reverse8
Api["math/bits"]["ReverseBytes"] = math_bits.ReverseBytes
Api["math/bits"]["ReverseBytes16"] = math_bits.ReverseBytes16
Api["math/bits"]["ReverseBytes32"] = math_bits.ReverseBytes32
Api["math/bits"]["ReverseBytes64"] = math_bits.ReverseBytes64
Api["math/bits"]["RotateLeft"] = math_bits.RotateLeft
Api["math/bits"]["RotateLeft16"] = math_bits.RotateLeft16
Api["math/bits"]["RotateLeft32"] = math_bits.RotateLeft32
Api["math/bits"]["RotateLeft64"] = math_bits.RotateLeft64
Api["math/bits"]["RotateLeft8"] = math_bits.RotateLeft8
Api["math/bits"]["Sub"] = math_bits.Sub
Api["math/bits"]["Sub32"] = math_bits.Sub32
Api["math/bits"]["Sub64"] = math_bits.Sub64
Api["math/bits"]["TrailingZeros"] = math_bits.TrailingZeros
Api["math/bits"]["TrailingZeros16"] = math_bits.TrailingZeros16
Api["math/bits"]["TrailingZeros32"] = math_bits.TrailingZeros32
Api["math/bits"]["TrailingZeros64"] = math_bits.TrailingZeros64
Api["math/bits"]["TrailingZeros8"] = math_bits.TrailingZeros8

}